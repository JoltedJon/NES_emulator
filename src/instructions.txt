BRK

  #  address R/W description
  --- ------- --- -----------------------------------------------
  1    PC     R  fetch opcode, increment PC
  2    PC     R  read next instruction byte (and throw it away),
                  increment PC
  3  $0100,S  W  push PCH on stack, decrement S
  4  $0100,S  W  push PCL on stack, decrement S
  5  $0100,S  W  push P on stack (with B flag set), decrement S
  6   $FFFE   R  fetch PCL
  7   $FFFF   R  fetch PCH


RTI

  #  address R/W description
  --- ------- --- -----------------------------------------------
  1    PC     R  fetch opcode, increment PC
  2    PC     R  read next instruction byte (and throw it away)
  3  $0100,S  R  increment S
  4  $0100,S  R  pull P from stack, increment S
  5  $0100,S  R  pull PCL from stack, increment S
  6  $0100,S  R  pull PCH from stack


RTS

  #  address R/W description
  --- ------- --- -----------------------------------------------
  1    PC     R  fetch opcode, increment PC
  2    PC     R  read next instruction byte (and throw it away)
  3  $0100,S  R  increment S
  4  $0100,S  R  pull PCL from stack, increment S
  5  $0100,S  R  pull PCH from stack
  6    PC     R  increment PC


PHA, PHP

  #  address R/W description
  --- ------- --- -----------------------------------------------
  1    PC     R  fetch opcode, increment PC
  2    PC     R  read next instruction byte (and throw it away)
  3  $0100,S  W  push register on stack, decrement S


PLA, PLP

  #  address R/W description
  --- ------- --- -----------------------------------------------
  1    PC     R  fetch opcode, increment PC
  2    PC     R  read next instruction byte (and throw it away)
  3  $0100,S  R  increment S
  4  $0100,S  R  pull register from stack


JSR

  #  address R/W description
  --- ------- --- -------------------------------------------------
  1    PC     R  fetch opcode, increment PC
  2    PC     R  fetch low address byte, increment PC
  3  $0100,S  R  internal operation (predecrement S?)
  4  $0100,S  W  push PCH on stack, decrement S
  5  $0100,S  W  push PCL on stack, decrement S
  6    PC     R  copy low address byte to PCL, fetch high address
                  byte to PCH
